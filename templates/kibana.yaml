apiVersion: v1
kind: Service
metadata:
  name: {{.Values.service.name}}
  labels:
    name: {{.Values.service.name}}
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "Kibana"
spec:
  type: {{ .Values.service.type }}
  selector:
    name: {{.Values.service.name}}
  ports:
    - name: http
      port: {{.Values.kibana.port}}
      protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{.Values.service.name}}
spec:
  replicas: {{.Values.kibana.replicas}}
  template:
    metadata:
      labels:
        name: {{.Values.service.name}}
    spec:
      containers:
      - name: {{.Values.service.name}}
        image: {{.Values.kibana.image}}
        imagePullPolicy: Always
        resources:
          limits:
            cpu: {{.Values.kibana.cpu_limit}}
          requests:
            cpu: {{.Values.kibana.cpu_requests}}
        env:
          - name: "ELASTICSEARCH_URL"
            value: "{{.Values.elasticsearch.url}}"
        ports:
        - containerPort: {{.Values.kibana.container_port}}
          name: ui
          protocol: TCP
      {{- if .Values.tolerations }}
      tolerations:
      {{- range .Values.tolerations }}
      - key: {{ .key | default ("") }}
        value: {{ .value | default ("")}}
        operator: {{ .operator | default ("Equal") }}
        effect: {{ .effect  | default ("")}}
      {{- end }}
      {{- end }}


    {{- if eq .Values.kibana.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  name: {{.Values.service.name}}
      {{- else if eq .Values.kibana.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  name: {{.Values.service.name}}
      {{- end }}

# Notes
# The elastic.co image does not work.
# Kibana fails to start
# Requires this in the container.spec to remove x-pack
#    command: [ "/bin/bash", "-c", "/usr/share/kibana/bin/kibana-plugin remove x-pack; /usr/local/bin/kibana-docker" ]
# Tested with this image
#   image: docker.elastic.co/kibana/kibana:5.6.1
